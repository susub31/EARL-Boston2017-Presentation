HomelessMap <- HomelessMap + scale_fill_continuous(low='lightgrey', high='lightblue', guide='colorbar')
HomelessMap <- HomelessMap + labs(x=NULL, y=NULL) +
theme(panel.border = element_blank()) +
theme(panel.background = element_blank()) +
theme(axis.ticks = element_blank()) +
theme(axis.text = element_blank()) +
#theme(legend.position = "none")
#Display the homeless map (color-coded by homeless counts)
HomelessMap
#Plot a blank US Map
BlankUSMap <- ggplot()
BlankUSMap <- BlankUSMap + geom_map(data=us, map=us,
aes(x=long, y=lat, map_id=region),
fill="white", color="black")
#US Map, color coded based on the COL Index in the state
HomelessMap <- BlankUSMap + geom_map(data=CountsByState, map=us,
aes(fill=TotalHomeless, map_id=region), color="#ffffff", size=0.15)
#HomelessMap <- HomelessMap + scale_fill_continuous(low='lightblue', high='darkblue', guide='colorbar')
HomelessMap <- HomelessMap + scale_fill_continuous(low='lightgrey', high='lightblue', guide='colorbar')
HomelessMap <- HomelessMap + labs(x=NULL, y=NULL) +
theme(panel.border = element_blank()) +
theme(panel.background = element_blank()) +
theme(axis.ticks = element_blank()) +
theme(axis.text = element_blank()) +
theme(legend.position = "none")
#Display the homeless map (color-coded by homeless counts)
HomelessMap
#Plot a blank US Map
BlankUSMap <- ggplot()
BlankUSMap <- BlankUSMap + geom_map(data=us, map=us,
aes(x=long, y=lat, map_id=region),
fill="white", color="black")
#US Map, color coded based on the COL Index in the state
HomelessMap <- BlankUSMap + geom_map(data=CountsByState, map=us,
aes(fill=TotalHomeless, map_id=region), color="#ffffff", size=0.15)
#HomelessMap <- HomelessMap + scale_fill_continuous(low='lightblue', high='darkblue', guide='colorbar')
HomelessMap <- HomelessMap + scale_fill_continuous(low='lightgrey', high='lightblue', guide='colorbar')
HomelessMap <- HomelessMap + labs(x=NULL, y=NULL) +
theme(panel.border = element_blank()) +
theme(panel.background = element_blank()) +
theme(axis.ticks = element_blank()) +
theme(axis.text = element_blank())
#theme(legend.position = "none")
#Display the homeless map (color-coded by homeless counts)
HomelessMap
ggplot(CountsByState, aes(x=TotalHomeless)) +
geom_density() +
facet_wrap(~ Count.Category)
library(dplyr)
hdata2016 <- read.csv("../Datasets/PIT_CountsByState_2016.csv", stringsAsFactors = FALSE)
hdata2015 <- read.csv("../Datasets/PIT_CountsByState_2015.csv", stringsAsFactors = FALSE)
combineddata <- merge(hdata2016, hdata2015, by.x ="State", by.y="State")
combineddata <- select(combineddata, State, TotalHomeless2016, TotalHomeless2015)
View(combineddata)
years = c("2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016")
for (i in years) {
paste0 i
}
years = c("2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016")
for (i in years) {
paste0(i)
}
years = c("2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016")
for (i in years) {
print(i)
}
years = c("2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016")
for (i in years) {
dfname = paste0("hdata", i)
print(dfname)
}
years = c("2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016")
for (i in years) {
dfname = paste0("hdata", i)
inputfilename = paste0("../Datasets/PIT_CountsByState_", i, ".csv")
print(dfname)
print (inputfilename)
}
years = c("2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016")
for (i in years) {
dfname = paste0("hdata", i)
inputfilename = paste0("../Datasets/PIT_CountsByState_", i, ".csv")
print(dfname)
print (inputfilename)
paste0("hdata", i) = read.csv(filename, stringsAsFactors = FALSE)
}
years = c("2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016")
for (i in years) {
dfname = paste0("hdata", i)
inputfilename = paste0("../Datasets/PIT_CountsByState_", i, ".csv")
print(dfname)
print (inputfilename)
paste0("hdata", i) = read.csv(inputfilename, stringsAsFactors = FALSE)
}
years = c("2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016")
for (i in years) {
dfname = paste0("hdata", i)
inputfilename = paste0("../Datasets/PIT_CountsByState_", i, ".csv")
print(dfname)
print (inputfilename)
paste0("hdata", i) = read.csv(paste0("../Datasets/PIT_CountsByState_", i, ".csv"), stringsAsFactors = FALSE)
}
years = c("2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016")
for (i in years) {
dfname = paste0("hdata", i)
inputfilename = paste0("../Datasets/PIT_CountsByState_", i, ".csv")
print(dfname)
print (inputfilename)
assign(paste0("hdata", i), read.csv(paste0("../Datasets/PIT_CountsByState_", i, ".csv"), stringsAsFactors = FALSE))
}
years = c("2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016")
for (i in years) {
dfname = paste0("hdata", i)
inputfilename = paste0("../Datasets/PIT_CountsByState_", i, ".csv")
print(dfname)
print (inputfilename)
assign(paste0("hdata", i), read.csv(paste0("../Datasets/PIT_CountsByState_", i, ".csv"), stringsAsFactors = FALSE))
}
View(hdata2007)
View(hdata2008)
View(hdata2010)
View(hdata2011)
View(hdata2012)
View(hdata2013)
View(hdata2014)
View(hdata2015)
View(hdata2016)
combineddata <- merge(hdata2016, hdata2015, by.x ="State", by.y="State")
combineddata <- select(combineddata, State, TotalHomeless2016, TotalHomeless2015)
combineddata <- merge(combineddata, hdata2014, by.x ="State", by.y="State")
combineddata <- select(combineddata, State, TotalHomeless2016, TotalHomeless2015, TotalHomeless2014)
View(combineddata)
combineddata <- merge(hdata2016, hdata2015, by.x ="State", by.y="State")
combineddata <- select(combineddata, State, TotalHomeless2016, TotalHomeless2015)
combineddata <- merge(combineddata, hdata2014, by.x ="State", by.y="State")
combineddata <- select(combineddata, State, TotalHomeless2016, TotalHomeless2015, TotalHomeless2014)
combineddata <- merge(combineddata, hdata2013, by.x ="State", by.y="State")
combineddata <- select(combineddata, State, TotalHomeless2016, TotalHomeless2015, TotalHomeless2014, TotalHomeless2013)
combineddata <- merge(combineddata, hdata2012, by.x ="State", by.y="State")
combineddata <- select(combineddata, State, TotalHomeless2016, TotalHomeless2015, TotalHomeless2014, TotalHomeless2013, TotalHomeless2012)
combineddata <- merge(combineddata, hdata2011, by.x ="State", by.y="State")
combineddata <- select(combineddata, State, TotalHomeless2016, TotalHomeless2015, TotalHomeless2014, TotalHomeless2013, TotalHomeless2012, TotalHomeless2011)
combineddata <- merge(combineddata, hdata2010, by.x ="State", by.y="State")
combineddata <- select(combineddata, State, TotalHomeless2016, TotalHomeless2015, TotalHomeless2014, TotalHomeless2013, TotalHomeless2012, TotalHomeless2011, TotalHomeless2010)
View(combineddata)
combineddata[1]
combineddata[,1]
combineddata[1,]
AK_TimeSeries <- ts(combineddata[1,], frequency = 1, start=c(2016, -1))
AK_TimeSeries
AK_TimeSeries$State=NULL
combineddata[1, 2..7]
combineddata[1, 2...7]
combineddata[1, -1]
AK_TimeSeries <- ts(combineddata[1,-1], frequency = 1, start=c(2016, -1))
AK_TimeSeries
plot(AK_TimeSeries)
years = c("2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016")
for (i in years) {
inputfilename = paste0("../Datasets/PIT_CountsByState_", i, ".csv")
assign(paste0("hdata", i), read.csv(paste0("../Datasets/PIT_CountsByState_", i, ".csv"), stringsAsFactors = FALSE))
assign(paste0("hdata", i, "$Year"), i)
}
View(hdata2007)
View(hdata2016)
`hdata2007$Year`
View(hdata2015)
years = c("2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016")
for (i in years) {
inputfilename = paste0("../Datasets/PIT_CountsByState_", i, ".csv")
assign(paste0("hdata", i), read.csv(paste0("../Datasets/PIT_CountsByState_", i, ".csv"), stringsAsFactors = FALSE))
paste0("hdata", i, "$Year") = i
}
years = c("2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016")
for (i in years) {
inputfilename = paste0("../Datasets/PIT_CountsByState_", i, ".csv")
assign(paste0("hdata", i), read.csv(paste0("../Datasets/PIT_CountsByState_", i, ".csv"), stringsAsFactors = FALSE))
assign(paste0("hdata", i, "$Year") , i)
}
hdata2007$Year <- 2007
View(hdata2007)
# Using the code below multiple datasets are created in a dynamic fashion
years = c("2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016")
for (i in years) {
inputfilename = paste0("../Datasets/PIT_CountsByState_", i, ".csv")
assign(paste0("hdata", i), read.csv(paste0("../Datasets/PIT_CountsByState_", i, ".csv"), stringsAsFactors = FALSE))
}
hdata2007$Year <- 2007
hdata2008$Year <- 2008
hdata2009$Year <- 2009
hdata2010$Year <- 2010
hdata2011$Year <- 2011
hdata2012$Year <- 2012
hdata2013$Year <- 2013
hdata2014$Year <- 2014
hdata2015$Year <- 2015
hdata2016$Year <- 2016
View(hdata2016)
combineddata <- merge(hdata2007, hdata2008, by.x ="State", by.y="State")
combineddata <- select(combineddata, State, Year, TotalHomeless2007, TotalHomeless2008)
combineddata <- merge(combineddata, hdata2009, by.x ="State", by.y="State")
combineddata <- select(combineddata, State, Year, TotalHomeless2007, TotalHomeless2008, TotalHomeless2009)
combineddata <- merge(combineddata, hdata2010, by.x ="State", by.y="State")
combineddata <- select(combineddata, State, Year, TotalHomeless2007, TotalHomeless2008, TotalHomeless2009,
TotalHomeless2010)
combineddata <- merge(combineddata, hdata2011, by.x ="State", by.y="State")
combineddata <- select(combineddata, State, Year, TotalHomeless2007, TotalHomeless2008, TotalHomeless2009,
TotalHomeless2010, TotalHomeless2011)
combineddata <- merge(combineddata, hdata2012, by.x ="State", by.y="State")
combineddata <- select(combineddata, State, Year, TotalHomeless2007, TotalHomeless2008, TotalHomeless2009,
TotalHomeless2010, TotalHomeless2011, TotalHomeless2012)
combineddata <- merge(combineddata, hdata2013, by.x ="State", by.y="State")
combineddata <- select(combineddata, State, Year, TotalHomeless2007, TotalHomeless2008, TotalHomeless2009,
TotalHomeless2010, TotalHomeless2011, TotalHomeless2012, TotalHomeless2013)
combineddata <- merge(combineddata, hdata2014, by.x ="State", by.y="State")
combineddata <- select(combineddata, State, Year, TotalHomeless2007, TotalHomeless2008, TotalHomeless2009,
TotalHomeless2010, TotalHomeless2011, TotalHomeless2012, TotalHomeless2013, TotalHomeless2014)
combineddata <- merge(combineddata, hdata2015, by.x ="State", by.y="State")
combineddata <- select(combineddata, State, Year, TotalHomeless2007, TotalHomeless2008, TotalHomeless2009,
TotalHomeless2010, TotalHomeless2011, TotalHomeless2012, TotalHomeless2013,
TotalHomeless2014, TotalHomeless2015)
combineddata <- merge(combineddata, hdata2016, by.x ="State", by.y="State")
combineddata <- select(combineddata, State, Year, TotalHomeless2007, TotalHomeless2008, TotalHomeless2009,
TotalHomeless2010, TotalHomeless2011, TotalHomeless2012, TotalHomeless2013,
TotalHomeless2014, TotalHomeless2015, TotalHomeless2016)
View(hdata2016)
View(combineddata)
combineddata <- merge(hdata2007, hdata2008, by.x ="State", by.y="State")
View(combineddata)
combineddata <- merge(hdata2007, hdata2008, by.x ="State", by.y="State")
combineddata <- select(combineddata, State, TotalHomeless2007, TotalHomeless2008)
combineddata <- merge(hdata2007, hdata2008, by.x ="State", by.y="State")
combineddata <- select(combineddata, State, TotalHomeless2007, TotalHomeless2008)
combineddata <- merge(combineddata, hdata2009, by.x ="State", by.y="State")
combineddata <- select(combineddata, State, TotalHomeless2007, TotalHomeless2008, TotalHomeless2009)
combineddata <- merge(combineddata, hdata2010, by.x ="State", by.y="State")
combineddata <- select(combineddata, State, TotalHomeless2007, TotalHomeless2008, TotalHomeless2009,
TotalHomeless2010)
combineddata <- merge(combineddata, hdata2011, by.x ="State", by.y="State")
combineddata <- select(combineddata, State, TotalHomeless2007, TotalHomeless2008, TotalHomeless2009,
TotalHomeless2010, TotalHomeless2011)
combineddata <- merge(combineddata, hdata2012, by.x ="State", by.y="State")
combineddata <- select(combineddata, State, TotalHomeless2007, TotalHomeless2008, TotalHomeless2009,
TotalHomeless2010, TotalHomeless2011, TotalHomeless2012)
combineddata <- merge(combineddata, hdata2013, by.x ="State", by.y="State")
combineddata <- select(combineddata, State, TotalHomeless2007, TotalHomeless2008, TotalHomeless2009,
TotalHomeless2010, TotalHomeless2011, TotalHomeless2012, TotalHomeless2013)
combineddata <- merge(combineddata, hdata2014, by.x ="State", by.y="State")
combineddata <- select(combineddata, State, TotalHomeless2007, TotalHomeless2008, TotalHomeless2009,
TotalHomeless2010, TotalHomeless2011, TotalHomeless2012, TotalHomeless2013, TotalHomeless2014)
combineddata <- merge(combineddata, hdata2015, by.x ="State", by.y="State")
combineddata <- select(combineddata, State, TotalHomeless2007, TotalHomeless2008, TotalHomeless2009,
TotalHomeless2010, TotalHomeless2011, TotalHomeless2012, TotalHomeless2013,
TotalHomeless2014, TotalHomeless2015)
combineddata <- merge(combineddata, hdata2016, by.x ="State", by.y="State")
combineddata <- select(combineddata, State, TotalHomeless2007, TotalHomeless2008, TotalHomeless2009,
TotalHomeless2010, TotalHomeless2011, TotalHomeless2012, TotalHomeless2013,
TotalHomeless2014, TotalHomeless2015, TotalHomeless2016)
View(combineddata)
combineddata[,1]
combineddata[1,]
AK_Data <- combineddata[1,]
AK_Data
reshape(AK_Data, direction="wide")
reshape(AK_Data, timevar = "time", direction="wide")
reshape(AK_Data, timevar = "time", direction="wide", idvar="State")
reshape(AK_Data, idvar="State", varying=c("TotalHomeless2007", "TotalHomeless2008", "TotalHomeless2009", "TotalHomeless2010", "TotalHomeless2011", "TotalHomeless2012", "TotalHomeless2013", "TotalHomeles2014", "TotalHomeless2015", "TotalHomeless2016"))
reshape(AK_Data, idvar="State", varying=c("TotalHomeless2007", "TotalHomeless2008", "TotalHomeless2009", "TotalHomeless2010", "TotalHomeless2011", "TotalHomeless2012", "TotalHomeless2013", "TotalHomeles2014", "TotalHomeless2015", "TotalHomeless2016"), direction="long")
tidyr::spread(AK_Data, TotalHomeless2007:TotalHomeless2016)
tidyr::spread(AK_Data, TotalHomeless2007,TotalHomeless2016)
tidyr::spread(AK_Data, TotalHomeless2007, TotalHomeless2008,TotalHomeless2016, )
tidyr::spread(AK_Data, TotalHomeless2007, TotalHomeless2008,TotalHomeless2016)
tidyr::spread(AK_Data, c(TotalHomeless2007, TotalHomeless2008,TotalHomeless2016))
tidyr::spread(AK_Data, State, c(TotalHomeless2007, TotalHomeless2008,TotalHomeless2016))
tidyr::spread(AK_Data, State, TotalHomeless2007, TotalHomeless2008,TotalHomeless2016)
tidyr::spread(AK_Data, State, TotalHomeless2007)
tidyr::spread(tidyr::spread(AK_Data, State, TotalHomeless2007), State, TotalHomeless2008)
tidyr::spread(tidyr::spread(AK_Data, TotalHomeless2007), State, TotalHomeless2008)
tidyr::spread(tidyr::spread(AK_Data, AK, TotalHomeless2007), State, TotalHomeless2008)
tidyr::spread(tidyr::spread(AK_Data, "AK", TotalHomeless2007), State, TotalHomeless2008)
gather(AK_Data, "year", "Counts", 2:10)
tidyr::gather(AK_Data, "year", "Counts", 2:10)
tidyr::gather(AK_Data, "year", "Counts", 2:11)
AK_Data <- combineddata[1,]
AK_Data
AK_Data_TS <- tidyr::gather(AK_Data, "year", "Counts", 2:11)
AK_Data_TS
AK_Data <- combineddata[1,]
AK_Data
AK_Data_TS <- tidyr::gather(AK_Data, "Year", "Counts", 2:11)
AK_Data_TS$Year <- gsub("TotalHomeless", "", AK_Data_TS$Year)
AK_Data_TS$State = NULL
AK_Data_TS
AK_TS <- ts(AK_Data_TS, frequency = 1, start = c(2007,1))
AK_TS
plot.ts(AK_Data_TS)
decompose(AK_Data_TS)
install.packages("tseries")
install.packages("forecast")
tsclean(AK_Data_TS)
library(tseries)
library(forecast)
tsclean(AK_Data_TS)
AK_Data_TS
tsclean(AK_Data_TS$Counts)
ggplot() + geom_line(data=AK_Data_TS), aes(x=Year, y=Counts))
ggplot() + geom_line(data=AK_Data_TS, aes(x=Year, y=Counts))
cycle(AK_Data_TS)
cycle(AK_Data_TS$Year)
cycle(AK_Data_TS$Counts)
plot(AK_Data_TS$Counts)
plot(AK_Data_TS)
plot.ts(AK_Data_TS$Counts)
acf(diff(log(AK_Data_TS)))
acf(diff(log(AK_Data_TS$Counts)))
fit <- arima(log(AK_Data_TS$Counts))
pred <- predict(fit, n.ahead = 1)
pred
ts.plot(AK_Data_TS, 2.718^pred$pred, log="y", lty=c(1,3))
ts.plot(AK_Data_TS, 2.718^pred$pred)
pred$pred
2.718^pred$pred
AK_Data_TS
new_TS <- rbind(AK_Data_TS, c(2017, 2.718^pred$pred))
new_TS
plot.ts(new_TS$Counts)
ggplot() + geom_line(aes(y=Counts, x=Year), data=AK_Data_TS, stat="identity")
AK <- as.data.frame(AK_Data_TS)
ggplot() + geom_line(aes(y=Counts, x=Year), data=AK, stat="identity")
p1 <- ggplot() + geom_line(aes(y=Counts, x=Year, colour="red"), data=AK, stat="identity")
p1
p1 + scale_x_continuous(breaks=seq(2007,2016,1))
AK
p1 <- ggplot(AK, aes(Year, Counts)) +
geom_point() +
geom_line() +
labs(x="Year", y="Counts")
p1
p1 <- ggplot(AK, aes(Year, Counts), group=1) +
geom_point() +
geom_line() +
labs(x="Year", y="Counts")
p1
p1 <- ggplot(AK, aes(Year, Counts, group=1)) +
geom_point() +
geom_line() +
labs(x="Year", y="Counts")
p1
p1 + scale_x_continuous(breaks=seq(2006, 2016,1))
p1 + scale_x_continuous()
p1 + stat_smooth()
p1 + stat_smooth(aes(y=Counts, x=Year), method=lm, formula=y ~ poly(x,10),se=FALSE)
p1 + stat_smooth(aes(y=Counts, x=Year), method=lm)
p1 + stat_smooth(aes(y=Counts, x=Year), method='loess')
spline_int <- as.data.frame(spline(AK$Year, AK$Counts))
ggplot(AK, aes(Year, Counts, group=1)) +
geom_point() +
geom_line(data=spline_int, aes(x=x, y=y))
p1 + stat_smooth(aes(y=Counts, x=Year), method=auto)
p1 + stat_smooth(aes(y=Counts, x=Year), method='auto')
ggplot(AK, aes(Year, Counts, group=1)) +
geom_point() +
geom_smooth()
ggplot(AK, aes(Year, Counts, group=1)) +
geom_point() +
geom_line() +
geom_smooth()
ggplot(new_TS, aes(Year, Counts, group=1)) +
geom_point() +
geom_line() +
geom_smooth()
new_TS
new_TS <- rbind(AK_Data_TS, c(2017, to.integer( 2.718^pred$pred)))
as.integer(2.718 ^ pred$pred)
new_TS <- rbind(AK_Data_TS, c(2017, as.integer(2.718^pred$pred)))
new_TS
head(hdata2007)
head(combineddata)
knitr::opts_chunk$set(echo = TRUE)
hdata2007$Year <- 2007
hdata2008$Year <- 2008
hdata2009$Year <- 2009
hdata2010$Year <- 2010
hdata2011$Year <- 2011
hdata2012$Year <- 2012
hdata2013$Year <- 2013
hdata2014$Year <- 2014
hdata2015$Year <- 2015
hdata2016$Year <- 2016
combineddata <- merge(hdata2007, hdata2008, by.x ="State", by.y="State")
combineddata <- select(combineddata, State, TotalHomeless2007, TotalHomeless2008)
combineddata <- merge(combineddata, hdata2009, by.x ="State", by.y="State")
combineddata <- select(combineddata, State, TotalHomeless2007, TotalHomeless2008, TotalHomeless2009)
combineddata <- merge(combineddata, hdata2010, by.x ="State", by.y="State")
combineddata <- select(combineddata, State, TotalHomeless2007, TotalHomeless2008, TotalHomeless2009,
TotalHomeless2010)
combineddata <- merge(combineddata, hdata2011, by.x ="State", by.y="State")
combineddata <- select(combineddata, State, TotalHomeless2007, TotalHomeless2008, TotalHomeless2009,
TotalHomeless2010, TotalHomeless2011)
combineddata <- merge(combineddata, hdata2012, by.x ="State", by.y="State")
combineddata <- select(combineddata, State, TotalHomeless2007, TotalHomeless2008, TotalHomeless2009,
TotalHomeless2010, TotalHomeless2011, TotalHomeless2012)
combineddata <- merge(combineddata, hdata2013, by.x ="State", by.y="State")
combineddata <- select(combineddata, State, TotalHomeless2007, TotalHomeless2008, TotalHomeless2009,
TotalHomeless2010, TotalHomeless2011, TotalHomeless2012, TotalHomeless2013)
combineddata <- merge(combineddata, hdata2014, by.x ="State", by.y="State")
combineddata <- select(combineddata, State, TotalHomeless2007, TotalHomeless2008, TotalHomeless2009,
TotalHomeless2010, TotalHomeless2011, TotalHomeless2012, TotalHomeless2013, TotalHomeless2014)
combineddata <- merge(combineddata, hdata2015, by.x ="State", by.y="State")
combineddata <- select(combineddata, State, TotalHomeless2007, TotalHomeless2008, TotalHomeless2009,
TotalHomeless2010, TotalHomeless2011, TotalHomeless2012, TotalHomeless2013,
TotalHomeless2014, TotalHomeless2015)
combineddata <- merge(combineddata, hdata2016, by.x ="State", by.y="State")
combineddata <- select(combineddata, State, TotalHomeless2007, TotalHomeless2008, TotalHomeless2009,
TotalHomeless2010, TotalHomeless2011, TotalHomeless2012, TotalHomeless2013,
TotalHomeless2014, TotalHomeless2015, TotalHomeless2016)
head(combineddata)
AK_Data_TS <- tidyr::gather(combineddata[1,], "Year", "Counts", 2:11)
AK_Data_TS$Year <- gsub("TotalHomeless", "", AK_Data_TS$Year)
AK_Data_TS$State = NULL
AK_Data_TS
plot.ts(AK_Data_TS$Counts)
AK_Data_TS <- tidyr::gather(combineddata[1,], "Year", "Counts", 2:11)
AK_Data_TS$Year <- gsub("TotalHomeless", "", AK_Data_TS$Year)
AK_Data_TS$State = NULL
AK_Data_TS
plot.ts(AK_Data_TS$Counts)
fit <- arima(log(AK_Data_TS$Counts))
pred <- predict(fit, n.ahead = 1)
new_TS <- rbind(AK_Data_TS, c(2017, as.integer(2.718^pred$pred)))
new_TS
# 2017 for Alaska: 1128 + 717 (https://www.alaskahousing-homeless.org/data/)
new_TS
# 2017 for Alaska: 1128 + 717 (https://www.alaskahousing-homeless.org/data/)
fit <- arima(log(AK_Data_TS$Counts))
pred <- predict(fit, n.ahead = 1)
new_TS <- rbind(AK_Data_TS, c(2017, as.integer(2.718^pred$pred)))
tail(new_TS)
# 2017 for Alaska: 1128 + 717 (https://www.alaskahousing-homeless.org/data/)
head(new_TS, 11)
# 2017 for Alaska: 1128 + 717 (https://www.alaskahousing-homeless.org/data/)
fit <- arima(log(AK_Data_TS$Counts))
pred <- predict(fit, n.ahead = 1)
new_TS <- rbind(AK_Data_TS, c(2017, as.integer(2.718^pred$pred)))
fit <- arima(log(AK_Data_TS$Counts))
pred <- predict(fit, n.ahead = 1)
new_TS <- rbind(AK_Data_TS, c(2017, as.integer(2.718^pred$pred)))
print("The value for the next year 2017 is: ", pred$pred)
fit <- arima(log(AK_Data_TS$Counts))
pred <- predict(fit, n.ahead = 1)
new_TS <- rbind(AK_Data_TS, c(2017, as.integer(2.718^pred$pred)))
print(paste0("The value for the next year 2017 is: ", pred$pred))
fit <- arima(log(AK_Data_TS$Counts))
pred <- predict(fit, n.ahead = 1)
new_TS <- rbind(AK_Data_TS, c(2017, as.integer(2.718^pred$pred)))
print(paste0("The value for the next year 2017 is: ", as.integer(2.718^pred$pred)))
tail(new_TS)
# 2017 for Alaska: 1128 + 717 (https://www.alaskahousing-homeless.org/data/)
tail(new_TS)
print("https://www.alaskahousing-homeless.org/data/")
print("PIT counts for 2017 for Alaska are: 1128 + 717 = 1845")"
tail(new_TS)
print("https://www.alaskahousing-homeless.org/data/")
print("PIT counts for 2017 for Alaska are: 1128 + 717 = 1845")
print("https://www.alaskahousing-homeless.org/data/")
print("PIT counts for 2017 for Alaska are: 1128 + 717 = 1845")
p1 <- ggplot(AK, aes(Year, Counts, group=1)) +
geom_point() +
geom_line() +
labs(x="Year", y="Counts") +
geom_smooth()
#p1 + stat_smooth(aes(y=Counts, x=Year), method='loess')
p1 <- ggplot(AK, aes(Year, Counts, group=1)) +
geom_point() +
geom_line() +
labs(x="Year", y="Counts") +
geom_smooth()
#p1 + stat_smooth(aes(y=Counts, x=Year), method='loess')
p1 <- ggplot(AK, aes(Year, Counts, group=1)) +
geom_point() +
geom_line() +
labs(x="Year", y="Counts") +
geom_smooth()
p1
#p1 + stat_smooth(aes(y=Counts, x=Year), method='loess')
p1 <- ggplot(AK, aes(Year, Counts, group=1)) +
geom_point() +
geom_line() +
labs(x="Year", y="Counts") +
geom_smooth()
p2 <- ggplot(new_TS, aes(Year, Counts, group=1)) +
geom_point() +
geom_line() +
labs(x="Year", y="Counts") +
geom_smooth()
p1
p2
#p1 + stat_smooth(aes(y=Counts, x=Year), method='loess')
p1 <- ggplot(AK, aes(Year, Counts, group=1)) +
geom_point() +
geom_line() +
labs(x="Year", y="Counts") +
geom_smooth()
p1
p2 <- ggplot(new_TS, aes(Year, Counts, group=1)) +
geom_point() +
geom_line() +
labs(x="Year", y="Counts") +
geom_smooth()
p2
View(hdata2016)
View(AK)
